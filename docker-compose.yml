version: "3.8"
services:
  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_USER: user
      MYSQL_USER_HOST: "%"
      MYSQL_PASSWORD: pass
      MYSQL_DATABASE: pokedex
    volumes:
      - ./scripts/mysql-init.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --bind-address=0.0.0.0
      - --default_authentication_plugin=mysql_native_password
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ppass"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: pokedex
    volumes:
      - ./scripts/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
  mongodb:
    image: mongo:6
    environment:
      MONGO_INITDB_DATABASE: pokedex
    volumes:
      - ./scripts/mongodb-init.sh:/init-replica.sh
    command: /init-replica.sh
    ports:
      - 27017:27017
  redis:
    image: redis:7
    ports:
      - 6379:6379
  dockerize:
    image: jwilder/dockerize:latest
    depends_on:
      - mysql
      - postgres
      - mongodb
      - redis
    command: |
      dockerize
      -wait tcp://mysql:3306
      -wait tcp://postgres:5432
      -wait tcp://mongodb:27017
      -wait tcp://redis:6379
      -timeout 30s
      -wait-retry-interval 3s
  app:
    build: .
    environment:
      - DATABASE_URI
    ports:
      - 8000:8000
